{"version":3,"sources":["features/userSlice.js","InputOption.js","Post.js","firebase.js","Feed.js","HeaderOpton.js","Header.js","Login.js","Sidebar.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","InputOption","Icon","title","color","className","style","Post","forwardRef","ref","description","message","photoUrl","Avatar","src","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Feed","useSelector","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","type","onClick","preventDefault","add","displayName","email","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","HeaderOpton","avatar","Header","dispatch","useDispatch","alt","placeholder","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","ProfileUrl","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","Sidebar","recentItem","topic","Widgets","newsArticles","heading","subtitle","App","onAuthStateChanged","store","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fad64d06.chunk.js","sourcesContent":["import {  createSlice } from '@reduxjs/toolkit';\n\n\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null,\n  },\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    login: (state, action) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.user = action.payload;\n    },\n    \n    // Use the PayloadAction type to declare the contents of `action.payload`\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n\n});\n\nexport const { login, logout } = userSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectUser = (state) => state.user.user;\n\n\n\nexport default userSlice.reducer;\n","import React from 'react'\nimport \"./InputOption.css\"\n\nfunction InputOption({Icon, title, color}) {\n    return (\n        <div className=\"inputOption\">\n            <Icon style={{color : color}} />\n            <h4>{title}</h4>\n        </div>\n    )\n}\n\nexport default InputOption\n","import { Avatar } from '@material-ui/core'\nimport React, {forwardRef} from 'react'\nimport InputOption from './InputOption'\nimport \"./Post.css\"\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\n\nconst Post= forwardRef(({name, description, message, photoUrl}, ref) =>  {\n    return (\n        <div ref={ref} className=\"post\">\n            <div className=\"post_header\">\n                <Avatar src={photoUrl} >{name[0]}</Avatar>\n                <div className=\"post_info\">\n                    <h2>{name}</h2>\n                    <p>{description}</p>\n                </div>\n\n            </div>\n            <div className=\"post_body\">\n                <p>{message}</p>\n            </div>\n\n            <div className=\"post_buttons\">\n                <InputOption Icon={ThumbUpAltOutlinedIcon} title=\"Like\" color=\"gray\" />\n                <InputOption Icon={ChatOutlinedIcon} title=\"Like\" color=\"gray\" />\n                <InputOption Icon={ShareOutlinedIcon} title=\"Like\" color=\"gray\" />\n                <InputOption Icon={SendOutlinedIcon} title=\"Like\" color=\"gray\" />\n            </div>\n            \n        </div>\n    )\n})\n\nexport default Post\n","import firebase from 'firebase'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB-whw-n4RvhPQE4EgCbrR8zV9g3_vcWPs\",\n  authDomain: \"linkedin-clone-kankan.firebaseapp.com\",\n  projectId: \"linkedin-clone-kankan\",\n  storageBucket: \"linkedin-clone-kankan.appspot.com\",\n  messagingSenderId: \"998442641594\",\n  appId: \"1:998442641594:web:be90347c3629701d297a83\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };","import React, { useEffect, useState } from 'react'\nimport \"./Feed.css\";\nimport CreateIcon from '@material-ui/icons/Create';\nimport InputOption from './InputOption';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\nimport Post from './Post';\nimport { db } from './firebase';\nimport firebase from 'firebase';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\nimport FlipMove from \"react-flip-move\"\n\nfunction Feed() {\n    const user = useSelector(selectUser);\n\n    const [input,setInput] = useState('');\n    const [posts, setPosts] = useState([]);\n\n    // update the post whenever it gets changed\n    useEffect(() => {\n        db.collection(\"posts\").orderBy('timestamp', 'desc').onSnapshot(snapshot => (\n            setPosts(snapshot.docs.map(doc => (\n                {\n                    id: doc.id,\n                    data: doc.data()\n                }\n            )))\n        ))\n        \n    }, []);\n\n\n    const sendPost = (e) => {\n        e.preventDefault();\n\n        db.collection('posts').add({\n            name: user.displayName,\n            description: user.email,\n            message: input,\n            photoUrl: user.photoUrl || \"\",\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(), //timezone equality\n\n        })\n        setInput('');\n    };\n\n\n    return (\n        <div className='feed'>\n            <div className=\"feed_inputContainer\">\n                <div className=\"feed_input\">\n                    <CreateIcon />\n                    <form>\n                        <input value={input} onChange={e => setInput(e.target.value)} type=\"text\" />\n                        <button onClick={sendPost} type='submit'>Send</button>\n                    </form>\n                </div>\n                <div className=\"feed_inputOption\">\n                    <InputOption Icon={ImageIcon} title='Photo' color=\"#70b5f9\"/>\n                    <InputOption Icon={SubscriptionsIcon} title='Video' color=\"#e7a33e\"/>\n                    <InputOption Icon={EventNoteIcon} title='Event' color=\"#c0cbcd\"/>\n                    <InputOption Icon={CalendarViewDayIcon} title='Write Article' color=\"#7fc15e\"/>\n                </div>\n            </div>\n            \n            {/* posts */}\n            <FlipMove>\n            {posts.map(({id, data: {name, description, message, photoUrl} }) => (\n                <Post \n                  key={id}\n                  name={name}\n                  description={description}\n                  message={message}\n                  photoUrl={photoUrl}\n                />\n            ))}\n            </FlipMove>\n\n            \n\n\n        </div>\n    )\n}\n\nexport default Feed\n","import React from 'react'\nimport \"./HeaderOption.css\";\nimport {Avatar} from \"@material-ui/core\";\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\n\nfunction HeaderOpton({avatar, Icon, title, onClick }) {\n    const user = useSelector(selectUser);\n\n    return (\n        <div onClick={onClick} className='headerOption'>\n            {Icon && <Icon className='headerOption_icon' />}\n            {avatar && (\n              <Avatar className=\"headerOption_icon\" >{user?.email[0]}</Avatar>\n            )}\n            <h3 className=\"headerOption_title\">{title}</h3>\n            \n        </div>\n    )\n}\n\nexport default HeaderOpton\n","import React from 'react'\nimport './Header.css'\nimport SearchIcon from '@material-ui/icons/Search';\nimport HeaderOpton from './HeaderOpton';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout, selectUser } from './features/userSlice';\nimport { auth } from './firebase';\n\n\nfunction Header() {\n    const dispatch = useDispatch();\n\n    const logoutOfApp = () => {\n        dispatch(logout())\n        auth.signOut();\n\n    }\n\n    return (\n        <div className='header'>\n          \n\n            <div className=\"header_left\">\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/174/174857.svg\" alt=\"\" />\n\n                <div className=\"header_search\">\n                    <SearchIcon/>\n                    <input placeholder=\"Search\" type=\"text\" />\n                </div>\n            </div>\n            <div className=\"header_right\">\n                <HeaderOpton Icon={HomeIcon} title=\"Home\"/>\n                <HeaderOpton Icon={SupervisorAccountIcon} title=\"My Network\"/>\n                <HeaderOpton Icon={BusinessCenterIcon} title=\"Jobs\"/>\n                <HeaderOpton Icon={ChatIcon} title=\"Messaging\" />\n                <HeaderOpton Icon={NotificationsIcon} title=\"Notifications\" />\n                <HeaderOpton\n                 avatar={true}\n                title='me'\n                onClick={logoutOfApp}\n                \n                />\n\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { login } from './features/userSlice';\nimport { auth } from './firebase';\nimport './Login.css'\n\nfunction Login() {\n    const [email, setEmail ] = useState(\"\");\n    const [password, setPassword ] = useState(\"\");\n    const [name, setName ] = useState(\"\");\n    const [profilePic, setProfilePic] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const loginToApp = (e) => {\n        e.preventDefault();\n\n        auth.signInWithEmailAndPassword(email,password)\n        .then(userAuth => {\n            dispatch(login({\n                email: userAuth.user.email,\n                uid: userAuth.user.uid,\n                displayName: userAuth.user.displayName,\n                ProfileUrl: userAuth.user.photoURL,\n            }));\n        }).catch(error => alert(error));\n    };\n\n    const register = () =>{\n        if(!name) {\n            return alert(\"Please enter a full name!!\");\n        }\n\n        auth.createUserWithEmailAndPassword(email, password)\n        .then((userAuth) => {\n            userAuth.user.updateProfile({\n                displayName: name,\n                photoURL: profilePic,\n            })\n            .then(() => {\n                dispatch(login({\n                    email: userAuth.user.email,\n                    uid: userAuth.user.uid,\n                    displayName: name,\n                    photoUrl: profilePic\n\n                }))\n            });\n        }).catch(error => alert(error));\n\n    };\n\n    return (\n        <div className=\"login\">\n            <img src=\"http://assets.stickpng.com/thumbs/580b57fcd9996e24bc43c528.png\" alt=\"\" />\n\n            <form>\n                <input \n                  value={name} \n                  onChange={(e) => setName(e.target.value)} \n                  placeholder=\"Full name (required if registering)\" type=\"text\" \n                />\n\n                <input \n                  value={profilePic} \n                  onChange={(e) => setProfilePic(e.target.value)} placeholder=\"Profile pic URL (optional)\" \n                  type=\"text\" \n                />\n\n                <input \n                  value={email} \n                  onChange={(e) => setEmail(e.target.value) } placeholder=\"Email\" \n                  type=\"text\" \n                />\n\n                <input \n                  value={password} \n                  onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" \n                  type=\"password\" \n                />\n\n                <button type=\"submit\" onClick={loginToApp} >Sign In</button>\n            </form>\n\n            <p>\n                Not a member?{\" \"}\n                <span className=\"login_register\" onClick={register} >Register Now</span>\n            </p>\n\n        </div>\n    )\n}\n\nexport default Login\n","import { Avatar } from '@material-ui/core';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\nimport \"./Sidebar.css\";\n\nfunction Sidebar() {\n\n    const user = useSelector(selectUser);\n\n    const recentItem = (topic) => (\n        <div className=\"sidebar_recentItem\">\n            <span className=\"sidebar_hash\">#</span>\n            <p>{topic}</p>\n        </div>\n\n    );\n\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar_top\">\n                <img src=\"https://png.pngtree.com/thumb_back/fh260/background/20190223/ourmid/pngtree-pure-color-watercolor-graffiti-gradient-background-board-design-board-design-image_66713.jpg\" alt=\"\" />\n                <Avatar src={user.photoUrl} className=\"sidebar_avatar\" >{user.email[0]}</Avatar>\n                <h2>{user.displayName}</h2>\n                <h4>{user.email}</h4>\n            </div>\n            <div className=\"sidebar_stats\">\n                <div className=\"sidebar_stat\">\n                    <p>Who Viewed you</p>\n                    <p className=\"sidebar_statNumber\">2,342</p>\n                </div>\n                 <div className=\"sidebar_stat\">\n                     <p>Views on post</p>\n                     <p className=\"sidebar_statNumber\">2,341</p>\n                \n                 </div>\n            </div>\n\n            <div className=\"sidebar_bottom\">\n                <p>Recents</p>\n                {recentItem(\"reactjs\")}\n                {recentItem(\"programming\")}\n                {recentItem(\"softwareengineering\")}\n                {recentItem(\"design\")}\n                {recentItem(\"developer\")}\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n\n","import React from 'react'\nimport \"./Widgets.css\"\nimport InfoIcon from '@material-ui/icons/Info';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nfunction Widgets() {\n\n    const newsArticles = (heading, subtitle) => (\n        <div className=\"widgets_article\">\n            <div className=\"widgets_articleLeft\">\n                <FiberManualRecordIcon />\n            </div>\n\n\n            <div className=\"widgets_articleRight\">\n                <h4>{heading}</h4>\n                <p>{subtitle}</p>\n            </div>\n        </div>\n    )\n    return (\n        <div className=\"widgets\">\n            <div className=\"widgets_header\">\n                <h2>LinkedIn News</h2>\n                <InfoIcon />\n            </div>\n            {newsArticles('Build and Brought up by Kankan', 'Top news - 9099 reders')}\n            {newsArticles('Stay Home, Stay Safe', 'Someone is out there fighting')}\n        </div>\n        \n    )\n}\n\nexport default Widgets;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport { login, logout, selectUser } from './features/userSlice';\nimport Feed from './Feed';\nimport { auth } from './firebase';\nimport Header from './Header';\nimport Login from './Login';\nimport Sidebar from './Sidebar';\nimport Widgets from './Widgets';\n\n\nfunction App() {\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged(userAuth => {\n      if (userAuth) {\n        //user logged in\n        dispatch(login({\n          email: userAuth.email,\n          uid: userAuth.uid,\n          displayName: userAuth.displayName,\n          photoUrl: userAuth.photoURL,\n        }))\n      }\n      else{\n        //log out\n        dispatch(logout());\n      }\n    })\n\n  }, [])\n\n  return (\n    <div className=\"app\">\n\n     <Header/>\n    \n      {!user ? <Login /> : (\n        \n     <div className=\"app_body\">\n       <Sidebar />\n\n       <Feed />\n      <Widgets />\n      \n\n    \n      </div>\n\n      )}\n\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}